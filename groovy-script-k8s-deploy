pipeline
{
    environment {
    registry = "192.168.0.111:8083/dev-pro1"
     registryCredential = 'nexus'
  }
    agent any
    tools {
    maven '/opt/maven'
    }
    stages 
    {
        stage('git clone') 
        {
            steps
            {
            git url: 'https://github.com/basilcpaul/test.git'
            }
        }
        stage('sonar')
        {
            steps
            {
                withSonarQubeEnv('sonarqube-server') 
                {
                    sh 'mvn clean package sonar:sonar'
                }
                
            }
        }
        stage("Quality Gate") 
        {
            steps 
            {
              timeout(time: 1, unit: 'HOURS') 
              {
                waitForQualityGate abortPipeline: true
              }
            }  
        }
        stage('Building image') 
        {
           steps
           {
              script 
              {
			  docker.withRegistry( 'http://192.168.0.111:8083' , registryCredential )
			  {
               def customImage = docker.build(registry)
                    customImage.push()
              }
			  }
           }  
        }
        stage('Remove Unused docker image') {
               steps{
        sh "docker rmi $registry"
         }
        }
        stage ('deployment') {
           steps 
           {
               sshagent(credentials : ['ansible']) {
               sh "ssh -vvv -o StrictHostKeyChecking=no -T root@192.168.119.132  'ansible-playbook -i /jenkins/hosts  /jenkins/kubernetes-deployment.yml'"
                }  
           }   
        }
    }
}

